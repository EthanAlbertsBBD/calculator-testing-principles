{
	"info": {
		"_postman_id": "62ad92ee-6331-475a-9074-0a877b2ec12f",
		"name": "Movie-Database",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26517441"
	},
	"item": [
		{
			"name": "Movies-Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should return an array called movies\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.movies).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response should return an array with Movie Object\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.movies[0]).to.have.keys('movieID','movieName','releaseDate', 'runningTime', 'movieDescription', 'genre' )\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Movies-Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Return status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"movie_name\": \"string\",\r\n  \"release_date\": \"2023-09-28T10:01:41.889Z\",\r\n  \"running_time\": 0,\r\n  \"movie_description\": \"string\",\r\n  \"genre\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Movies-Put",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Return status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"movie_name\": \"The Matrix 2 Elctro Booga Loo\",\r\n  \"release_date\": \"2023-09-28T14:08:42.256Z\",\r\n  \"running_time\": 136,\r\n  \"movie_description\": \"Science Fiction, Action\",\r\n  \"genre\": \"string\",\r\n  \"movie_id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Movies-Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Return status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var currentMovieId = pm.environment.get(\"movieId\");\r",
							"\r",
							"pm.sendRequest(\"http://localhost:8080/movies\", function (err, response) {\r",
							"    if (err) {\r",
							"        console.error(err);\r",
							"        return;\r",
							"    }\r",
							"\r",
							"    var responseData = response.json();\r",
							"\r",
							"    var latestMovieId = -1;\r",
							"\r",
							"    // Iterate through the response to find the latest movie ID\r",
							"    for (var i = 0; i < responseData.length; i++) {\r",
							"        var movieID = responseData[i].movieID;\r",
							"        if (movieID > latestMovieId) {\r",
							"            latestMovieId = movieID;\r",
							"        }\r",
							"    }\r",
							"\r",
							"    pm.environment.set(\"movieId\", latestMovieId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/movies?movie_id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movies"
					],
					"query": [
						{
							"key": "movie_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Actors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actors-Movies",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actors/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actors",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Directors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/directors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"directors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Producers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/producers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"producers"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "movieId",
			"value": "-1"
		}
	]
}